@model MovieReviewSite.Core.Models.Movie.ViewModels.MovieDetailsViewModel

@{
    ViewData["Title"] = "Movie Details";

}
<h1> @Html.DisplayFor(m => m.Movie!.MovieName) </h1>

<a asp-action="AddReviewView" asp-controller="Review" asp-route-id="@Model!.Movie!.Id">Review</a>

<div>
    <br>
    <h3>@Html.DisplayNameFor(m => m.Movie!.Synopsis) :</h3>
    <p style="border-style: solid; padding: 10px">
        @Html.DisplayFor(m => m.Movie!.Synopsis)
    </p>
    <br>
    <p style="border-style: solid; padding: 10px">
        @Html.DisplayNameFor(m => m.Movie!.Rating) : @Html.DisplayFor(m => m!.Movie!.Rating)
        <br>
        @Html.DisplayNameFor(m => m.Movie!.ReleaseDate) : @Html.DisplayFor(m => m!.Movie!.ReleaseDate)
        <br>
        @Html.DisplayNameFor(m => m.Movie!.Duration) : @Html.DisplayFor(m => m!.Movie!.Duration)
        <br>
        @Html.DisplayNameFor(m => m.Movie!.AgeRating) : @Html.DisplayFor(m => m!.Movie!.AgeRating.Title)
        <br>
    </p>
    <div>
        <h4>
            Genres :
        </h4>
        @foreach (var item in Model.Movie!.Genre)
        {
            <br>
            <ul style="border-style: solid; border-color: dimgray ; padding: 5px ; justify-content: left ;display:inline-block;">
                <a asp-action="GetMoviesByGenreView" asp-controller="Genre" asp-route-id="@item.Id"> @Html.DisplayFor(m => item.Title)</a>
            </ul>
            <br>
        }
    </div>
    <div>
        <h4>
            Cast & Crew :
        </h4>
        <div style="border-style: solid; border-color: dimgray; padding: 5px">
            @foreach (var item in Model!.Movie!.Crew!)
            {
                <ul>
                    @Html.DisplayFor(m => item.CrewType!.Title) : <a asp-action="GetCrewDetailsView" asp-controller="Crew" asp-route-id="@item.Id">@Html.DisplayFor(m => item.FullName)</a>
                </ul>
            }
        </div>
    </div>
    <br>
</div>

<h4>@Html.DisplayFor(m => m.Movie!.ReviewsCount) Reviews</h4>
<ul>
    @foreach (var review in Model.Reviews)
    {
        <div style="border-style: solid; padding: 10px">
            <p style="font-style: oblique; font-size: large">
                @Html.DisplayFor(r => review!.Title)
            </p>
            <a asp-action="GetUserDetailView" asp-controller="User" asp-route-id="@review.User!.Id">
                @Html.DisplayFor(r => review.User.UserName)
            </a>
            <p>
                @Html.DisplayNameFor(r => review!.Score) : @Html.DisplayFor(r => review!.Score!.Value)
            </p>
            <p style="border-style: solid;border-color: dimgray">
                @Html.DisplayFor(r => review!.Review)
            </p>
            <p>
                @Html.DisplayFor(r => review!.LikesCount) Likes | <a asp-action="GetReviewDetailsView" asp-controller="Review" asp-route-id="@review.Id">@Html.DisplayFor(r => review!.CommentsCount) Comments</a>
            </p>
            <button style="background-color: #137354" class="btn btn-primary" asp-action="LikeReview" asp-controller="Review" asp-route-id="@review!.Id"> Like </button>
            <p style="color:dimgray "> Created On : @Html.DisplayFor(r => review.CreatedOn, "{MM/dd/yyyy}") | Last Modifies On : @Html.DisplayFor(r => review.LastModified, "{MM/dd/yyyy}")</p>
        </div>
    }
</ul>
<div>
    <p style="color:dimgray "> Created On : @Html.DisplayFor(c => c.Movie!.CreatedOn, "{MM/dd/yyyy}") | Last Modifies On : @Html.DisplayFor(c => c.Movie!.LastModifiedOn, "{MM/dd/yyyy}")</p>

</div>
