@model MovieReviewSite.Core.Models.User.ViewModel.UserDetailsViewModel

@{
    ViewData["Title"] = @Html.DisplayFor(u => u.UserBaseInfo!.UserName);
}

@{
    ViewData["Title"] = "Movie Details";

}
<h1> @Html.DisplayFor(u => u.UserBaseInfo!.Name) </h1>


<div>
    <br>
    <h3>Detail:</h3>
    <p style="border-style: solid; padding: 10px">
        @Html.DisplayNameFor(u => u.UserBaseInfo!.UserName) : @Html.DisplayFor(u => u.UserBaseInfo!.UserName)
        <br>
        @Html.DisplayNameFor(u => u.UserBaseInfo!.Email) : @Html.DisplayFor(u => u.UserBaseInfo!.Email)
        <br>
        @Html.DisplayNameFor(u => u.UserBaseInfo!.Role!.Role) : @Html.DisplayFor(u => u.UserBaseInfo!.Role!.Role)
        <br>
    </p>
</div>

<h3>Reviews:</h3>
<ul>
    @foreach (var review in Model.UserReviews)
    {
        <div style="border-style: solid; padding: 10px">
            <p style="font-style: oblique; font-size: large">
                @Html.DisplayFor(r => review.Title)
            </p>
            <p>
                @Html.DisplayNameFor(r => review.Score) : @Html.DisplayFor(r => review.Score!.Value)
            </p>
            <p style="border-style: solid;border-color: dimgray">
                @Html.DisplayFor(r => review.Review)
            </p>

            <p>
                @Html.DisplayFor(r => review!.LikesCount) Likes | <a asp-action="GetReviewDetailsView" asp-controller="Review" asp-route-id="@review.Id">@Html.DisplayFor(r => review!.CommentsCount) Comments</a>
            </p>             
            <button style="background-color: #137354" class="btn btn-primary" asp-action="LikeReview" asp-controller="Review" asp-route-id="@review.Id"> Like </button>
        </div>
    }
</ul>
<div>
    <p style="color:dimgray "> Created On : @Html.DisplayFor(u => u.UserBaseInfo!.CreatedOn, "{MM/dd/yyyy}") | Last Modifies On : @Html.DisplayFor(u => u.UserBaseInfo!.LastModifiedOn, "{MM/dd/yyyy}")</p>

</div>
